@model Expenses.Web.Models.OperationViewData

@{
    ViewBag.Title = Strings.NewRecord;
}

<div id="add-category-dialog" style="display:none;" title="@Strings.NewCategory">
    <label class="control-label">@Strings.Name</label>
    <input type="text" class="form-control" id="add-category-name"/>
</div>

<div id="add-sub-dialog" style="display:none;" title="@Strings.NewSubcategory">
    <label class="control-label">@Strings.Name</label>
    <input type="text" class="form-control" id="add-sub-name"/>
</div>

<h2>@Strings.NewRecord</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Strings.Operation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2" for="CategoryId">@Strings.Category</label>
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control", style = "display:inline;" })
                <button type="button" class="btn btn-default" id="add-category" tabIndex="-1">+</button>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="SubcategoryId">@Strings.Subcategory</label>
            <div class="col-md-10">
                @Html.DropDownList("SubcategoryId", null, htmlAttributes: new { @class = "form-control", style = "display:inline;" })
                <button type="button" class="btn btn-default" id="add-sub" tabIndex="-1">+</button>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="AccountId">@Strings.Account</label>
            <div class="col-md-10">
                @Html.DropDownList("AccountId", null, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Amount">@Strings.Amount</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", style = "display:inline;" } })
                <span id="CurrencyName">@ViewBag.CurrencyName</span><br/>
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Comment">@Strings.Comment</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Strings.Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(Strings.BackToList, "Index")
</div>

@section Styles {
    @Styles.Render("~/Content/jquery-ui")
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery-ui")
    @Scripts.Render("~/bundles/operation.edit")

<script type="text/javascript">$(function(){ initOperationEdit("@Strings.Cancel"); });</script>
}

